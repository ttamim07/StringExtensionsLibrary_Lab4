trigger:
  - main

pool:
  vmImage: 'windows-latest'  # Use Windows as the environment

steps:
  # Step 1: Install .NET SDK
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.x'  # Ensure correct version

  # Step 2: Restore NuGet Packages
  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '**/*.csproj'

  # Step 3: Build the Project
  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--configuration Release'

  # Step 4: Pack the Project into a NuGet Package
  - task: DotNetCoreCLI@2
    inputs:
      command: 'pack'
      projects: '**/*.csproj'
      arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'

  # Step 5: Push the NuGet Package to Azure Artifacts
  - task: NuGetCommand@2
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
      publishVstsFeed: 'StringExtensionsFeed'  # Replace with your feed name
